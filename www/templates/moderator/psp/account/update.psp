from moderation_func import *

request = context.request
prn, param = request.output.stream.prn, request.input.parameters().find
conf = context.config.get

moderator = connect_moderator(request, moderator_connector)

if not moderator.has_privilege(newsgate.moderation.moderator.PV_ACCOUNT_MANAGER):
  el.exit(403) # Forbidden

focus_id = "n"
message = None
error_occured = False

try:
  subordinates = moderator.moderator_manager.get_subordinates()

except newsgate.moderation.InvalidSession:
  el.exit(el.psp.Forward("/psp/login.psp", 
                         "Your session expired.<br>Please, relogin."))

except newsgate.moderation.NotReady:
  el.exit(el.psp.Forward(\
          "/psp/accounts.psp", 
          "The system is not ready to serve your request.<br>Please, try again in several minutes."))

account_id = int(param("i"))
account = None

for sub in subordinates:
  if sub.id == account_id:
    account = sub
    break

if account == None:
  el.exit(el.psp.Forward(\
          "/psp/accounts.psp", 
          "You have no permission to access this account"))

if param("u") == "":
  name = account.name
  password = ""
  password2 = ""
  email = account.email
  status = account.status

  privileges = el.Sequence()
  for priv in account.privileges: privileges.append(priv.priv)

else:
  name = param("n")
  password = param("p")
  password2 = param("p2")
  email = param("e")
  privileges = get_privileges(context, account)

  if param("s") == "Enabled": status = newsgate.moderation.moderator.MS_ENABLED
  else: status = newsgate.moderation.moderator.MS_DISABLED

  if name == "":
    message = "Name should be specified"
    error_occured = True
    focus_id = "n"
  elif password != "":
    if password2 == "":
      message = "Please reenter password"
      error_occured = True
      focus_id = "p2"
    elif password != password2:
      message = "Password should be equal to the reentered one"
      error_occured = True
      focus_id = "p"
  
  if error_occured == False and email == "":
    message = "Email should be specified"
    error_occured = True
    focus_id = "e"

  if error_occured == False:

    update_info = newsgate.moderation.moderator.ModeratorUpdateInfo()

    update_info.id = account_id
    update_info.name = name
    update_info.password = password
    update_info.email = email
    update_info.status = status
    update_info.show_deleted = account.show_deleted
    update_info.privileges = privileges

    try:
      account = moderator.moderator_manager.update_moderator(update_info)

      if account.is_customer():
        update_info = newsgate.moderation.customer.CustomerUpdateInfo()
        update_info.id = account.id

        if account.status == newsgate.moderation.moderator.MS_ENABLED:
           update_info.status = newsgate.moderation.customer.CS_ENABLED
        else:
           update_info.status = newsgate.moderation.customer.CS_DISABLED

        moderator.customer_manager.update_customer(update_info)

      message = "Account '" + account.name + "' was successfully updated"
      account_name = name

    except newsgate.moderation.moderator.AccountNotExist:
      el.exit(el.psp.Forward("/psp/accounts.psp", "User account do not exist."))

    except newsgate.moderation.moderator.NewNameOccupied:
      el.exit(el.psp.Forward("/psp/accounts.psp", "Account name already occupied."))

    except newsgate.moderation.InvalidSession:
      el.exit(el.psp.Forward("/psp/login.psp", 
                             "Your session expired.<br>Please, relogin."))

    except newsgate.moderation.moderator.PermissionDenied:
      el.exit(403) # Forbidden

    except newsgate.moderation.NotReady:
      el.exit(el.psp.Forward(\
        "/psp/accounts.psp", 
        "The system is not ready to serve your request.<br>Please, try again in several minutes."))

prn(
R'''
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Management: Edit Account</title>
<link rel="stylesheet" type="text/css" href="/fixed/css/common.css" media="all" />
<link rel="stylesheet" type="text/css" href="/fixed/css/account/update.css" media="all" />
</head>

<body onload='document.getElementById("''', focus_id, R'''").focus()'>
<table id="skeleton" cellspacing="0">
''')

menus = []
create_topbar_main_menus(context, moderator, "Accounts", menus)

left_menu = [ ("View", "/psp/account/view"),
              ("New", "/psp/account/create"),
              ("Edit", "")
            ]

if moderator.has_privilege(newsgate.moderation.moderator.PV_CUSTOMER_MANAGER) \
   and is_customer(privileges) and \
   conf("moderation.customer_moderating") == "1":

#( "Accounting (" + account.name + ")",

  left_menu.append( ( "Accounting",
                      "/psp/account/accounting?i=" + str(account_id)
                    )
                  )

prn(create_topbar(left_menu,
                  menus[0], 
                  menus[1]))

prn(create_account_form(context,
                        moderator, 
                        "/psp/account/update",
                        name, 
                        password, 
                        password2, 
                        email, 
                        privileges,
                        status,
                        ("u", "Update"),
                        [ ("i", str(account_id)) ],
                        message,
                        error_occured),
    create_copyright(context), 
    R'''
</table>
</body>
</html>
''')
