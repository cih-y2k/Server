from moderation_func import *

request, conf = context.request, context.config.get
message = context.forward_params
prn, param = request.output.stream.prn, request.input.parameters().find

moderator = connect_moderator(request, moderator_connector)
advertiser_id = moderator.advertiser_id

ad_manager = \
  moderator.has_privilege(newsgate.moderation.moderator.PV_AD_MANAGER)

if not advertiser_id:
  el.exit(403) # Forbidden

id = long(param("id", 0))
gid = long(param("gid", 0))
cl = long(param("cl", 0))

svc = SetValueCtx()

if param("u"):

  grp = moderator.ad_manager.get_group(gid, advertiser_id)

  plc = newsgate.moderation.ad.CounterPlacement()

  plc.id = id
  plc.group = gid
  plc.group_name = grp.name
  plc.campaign = grp.campaign
  plc.campaign_name = grp.campaign_name
  plc.advertiser = advertiser_id

  try: plc.name = param("pn").strip()
  except: svc.error = "Name can't be empty"

  status = param("ps")
  if status == "E": plc.status = newsgate.moderation.ad.OS_ENABLED
  elif status == "D": plc.status = newsgate.moderation.ad.OS_DISABLED
  else: plc.status = newsgate.moderation.ad.OS_DELETED

  counter_name = param("cn")
  if counter_name: plc.counter.name = counter_name

  plc.counter.id = long(param("cr"))
  if not plc.counter.id and not svc.error: svc.error = "Select Counter"

  page_name = param("gn")
  if page_name: plc.page.name = page_name

  plc.page.id = long(param("pg"))
  if not plc.page.id and not svc.error: svc.error = "Select Page"

  if not svc.error:

    if id:
      update = newsgate.moderation.ad.CounterPlacementUpdate()

      update.id = id
      update.advertiser = advertiser_id
      update.status = plc.status
      update.name = plc.name
      update.page = plc.page.id
      update.counter = plc.counter.id

      try:
        plc = moderator.ad_manager.update_counter_placement(update)
      except newsgate.moderation.ad.ObjectNotFound:
        svc.error = "Placement not found"
      except newsgate.moderation.ad.ObjectAlreadyExist:
        svc.error = "Such placement name is already used"

    else:

      try:

        plc = moderator.ad_manager.create_counter_placement(plc)
        id = plc.id
      except newsgate.moderation.ad.ObjectAlreadyExist:
        svc.error = "Such placement name is already used"

elif id:
    plc = moderator.ad_manager.get_counter_placement(id, advertiser_id)
elif cl:
    plc = moderator.ad_manager.get_counter_placement(cl, advertiser_id)
    plc.id = 0
    plc.name = plc.name + " (clone)"
else:
    grp = moderator.ad_manager.get_group(gid, advertiser_id)

    plc = newsgate.moderation.ad.CounterPlacement()
    plc.group = gid
    plc.group_name = grp.name
    plc.campaign = grp.campaign
    plc.campaign_name = grp.campaign_name
    plc.advertiser = advertiser_id

prn(
R'''<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Management: ''', el.string.manip.xml_encode(plc.name), 
R''' Counter Placement</title>
<link rel="stylesheet" type="text/css" href="/fixed/css/common.css" media="all" />
<link rel="stylesheet" type="text/css" href="/fixed/css/ad/counter_placement.css" media="all" />
<script src="/fixed/js/elements.js" type="text/javascript"></script>
<script src="/fixed/js/commons.js" type="text/javascript"></script>
<script src="/fixed/js/ad/counter_placement.js" type="text/javascript"></script>
</head>
<body>
<table id="skeleton" cellspacing="0">
''')

menus = []
create_topbar_main_menus(context, moderator, "Ad", menus)

prn(create_topbar(\
      create_ad_menus(moderator, 
                      plc.id and "Counter Placement" or "New Counter Placement",
                      id),
      menus[0], 
      menus[1]))

prn(R'''
  <tr><td id="main_area" valign="top" align="center">
    <form id="form" method="post" action="counter_placement">
    <table id="placement">''')

if svc.error:
  prn('\n    <tr><td colspan="2" class="error">', 
      el.string.manip.xml_encode(svc.error), '</td></tr>')

prn(R'''
    <tr class="option_row"><td class="label">Campaign</td><td>
      <a href="/psp/ad/campaign?id=''', plc.campaign, '">', 
      el.string.manip.xml_encode(plc.campaign_name),
    R'''</a></td></tr>
    <tr class="option_row"><td class="label">Group</td><td>
      <a href="/psp/ad/group?id=''', plc.group, '">', 
      el.string.manip.xml_encode(plc.group_name),
    R'''</a></td></tr>
    <tr class="option_row">
      <td class="label">Name&nbsp;[<a href="javascript:set_name('cur_counter')">Counter</a>]&nbsp;[<a href="javascript:set_name('cur_page')">Page</a>]&nbsp;[<a href="javascript:set_mix()">Mix</a>]</td><td>
      <input type="text" value="''', el.string.manip.xml_encode(plc.name),
    R'''" name="pn" id="pn" class="text_option"></td></tr>
    <tr class="option_row"><td class="label">Status</td><td>
    <select name="ps">''')

statuses = [ (newsgate.moderation.ad.OS_ENABLED, "Enabled", "E"), 
             (newsgate.moderation.ad.OS_DISABLED, "Disabled", "D"),
             (newsgate.moderation.ad.OS_DELETED, "Deleted", "L")
           ]

for s in statuses:
  prn('<option', plc.status == s[0] and ' selected="selected"' or '', 
      ' value="', s[2], '">', s[1], '</option>')

prn(R'''</select></td></tr>
    <tr class="option_row"><td>Counter</td><td>
    <a href="javascript:set_counter()" id="cur_counter">''')

if plc.counter.id:
  prn(el.string.manip.xml_encode(plc.counter.name))
else:
  prn("Select Counter")

prn(R'''</a></td></tr>
    <tr class="option_row"><td>Page</td><td>
    <a href="javascript:set_page()" id="cur_page">''')

if plc.page.id:
  prn(el.string.manip.xml_encode(plc.page.name))
else:
  prn("Select Page")

prn('</a></td></tr>')

prn('\n    <tr class="option_row"><td', 
    plc.display_status and ' class="error"' or '',
    '>Display Status</td><td>', 
    plc.display_status or "Active",
    '</td></tr>')

prn(R'''
    <tr><td colspan="2">
      <input type="submit" name="u" value="''', id and "Update" or "Create", 
    R'''"/>
    </td></tr>''')

prn(R'''
    </table>
  <input type="hidden" name="id" value="''', plc.id, R'''">
  <input type="hidden" name="gid" value="''', plc.group, R'''">
  <input type="hidden" id="pg" name="pg" autocomplete="off" value="''', 
    plc.page.id, R'''">
  <input type="hidden" id="gn" name="gn" autocomplete="off" value="''', 
    el.string.manip.xml_encode(plc.page.name), R'''">
  <input type="hidden" id="cr" name="cr" autocomplete="off" value="''', 
    plc.counter.id, R'''">
  <input type="hidden" id="cn" name="cn" autocomplete="off" value="''',
    el.string.manip.xml_encode(plc.counter.name), R'''">
  </form>
  </td></tr>
''', create_copyright(context), R'''
</table>
</body>
</html>
''')
